"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5081],{3905:(e,t,r)=>{r.r(t),r.d(t,{MDXContext:()=>p,MDXProvider:()=>m,mdx:()=>h,useMDXComponents:()=>u,withMDXComponents:()=>s});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(){return o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},o.apply(this,arguments)}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){return function(t){var r=u(t.components);return n.createElement(e,o({},t,{components:r}))}},u=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},m=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=u(r),m=a,d=s["".concat(c,".").concat(m)]||s[m]||f[m]||o;return r?n.createElement(d,i(i({ref:t},p),{},{components:r})):n.createElement(d,i({ref:t},p))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,c=new Array(o);c[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var p=2;p<o;p++)c[p]=r[p];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},20752:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>p,default:()=>f,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var n=r(83117),a=r(80102),o=(r(67294),r(3905)),c=r(44996),i=["components"],l={},p=void 0,s={type:"mdx",permalink:"/docs/plugins/fresco/overview",source:"@site/src/embedded-pages/docs/plugins/fresco/overview.mdx",description:"The Images plugin enables you to inspect what images were fetched, where they are coming from, and selectively clear caches.",frontMatter:{}},u=[{value:"Cache Inspector",id:"cache-inspector",level:2},{value:"Attribution",id:"attribution",level:2},{value:"Leak Tracking",id:"leak-tracking",level:2}],m={toc:u};function f(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.mdx)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.mdx)("p",null,"The Images plugin enables you to inspect what images were fetched, where they are coming from, and selectively clear caches."),(0,o.mdx)("p",null,"Currently, the plugin supports ",(0,o.mdx)("a",{parentName:"p",href:"https://github.com/facebook/fresco/"},"Fresco")," as the backend."),(0,o.mdx)("img",{alt:"Images plugin",src:(0,c.default)("img/images-plugin.png")}),(0,o.mdx)("h2",{id:"cache-inspector"},"Cache Inspector"),(0,o.mdx)("p",null,"Images are grouped by the different caching layers they are stored in. The current fill rate of the cache is shown and you can choose to selectively clear caches."),(0,o.mdx)("h2",{id:"attribution"},"Attribution"),(0,o.mdx)("p",null,"Images can be annotated with attributes that can help to determine the context in which an image was loaded and displayed. You can use that information to filter by a particular surface or only inspect images that are in the critical path of your application (such as during a cold start)."),(0,o.mdx)("h2",{id:"leak-tracking"},"Leak Tracking"),(0,o.mdx)("p",null,"Dealing with large resources can require special APIs to be used that circumvent usual garbage collection. The plugin enables the tracking of ",(0,o.mdx)("inlineCode",{parentName:"p"},"CloseableReference"),"s for Fresco on Android that weren't properly closed, which can help you improve the performance of your app."))}f.isMDXComponent=!0}}]);
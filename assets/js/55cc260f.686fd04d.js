"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7718],{3905:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>l,MDXProvider:()=>d,mdx:()=>y,useMDXComponents:()=>c,withMDXComponents:()=>p});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a.apply(this,arguments)}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){return function(t){var n=c(t.components);return r.createElement(e,a({},t,{components:n}))}},c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),p=c(n),d=o,m=p["".concat(i,".").concat(d)]||p[d]||f[d]||a;return n?r.createElement(m,s(s({ref:t},l),{},{components:n})):r.createElement(m,s({ref:t},l))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5760:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>u,metadata:()=>p,toc:()=>d});var r=n(83117),o=n(80102),a=(n(67294),n(3905)),i=n(44996),s=["components"],u={id:"index",title:"Introduction"},l=void 0,p={unversionedId:"features/index",id:"features/index",title:"Introduction",description:"Flipper itself only provides the architectural platform. What makes it useful are the plugins built on top of it, such as Logs, Layout Inspector and Network Inspector.",source:"@site/../docs/features/index.mdx",sourceDirName:"features",slug:"/features/",permalink:"/docs/features/",draft:!1,editUrl:"https://github.com/facebook/flipper/blob/main/website/../docs/features/index.mdx",tags:[],version:"current",frontMatter:{id:"index",title:"Introduction"},sidebar:"main",next:{title:"Share Flipper Data",permalink:"/docs/features/share-flipper-data"}},c={},d=[{value:"Build your own plugin",id:"build-your-own-plugin",level:2}],f={toc:d};function m(e){var t=e.components,n=(0,o.Z)(e,s);return(0,a.mdx)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("p",null,"Flipper itself only provides the architectural platform. What makes it useful are the plugins built on top of it, such as ",(0,a.mdx)("a",{parentName:"p",href:"/docs/features/plugins/device-logs"},"Logs"),", ",(0,a.mdx)("a",{parentName:"p",href:"/docs/features/plugins/inspector"},"Layout Inspector")," and ",(0,a.mdx)("a",{parentName:"p",href:"/docs/features/plugins/network"},"Network Inspector"),"."),(0,a.mdx)("p",null,"Plugins can be tailored to your business logic and the use-cases you have in your app. Flipper is shipped with a couple of built-in all-purpose plugins, but you're encouraged to build your own (see below). Each plugin needs to be enabled individually."),(0,a.mdx)("img",{alt:"Plugins",src:(0,i.default)("img/plugins.png")}),(0,a.mdx)("h2",{id:"build-your-own-plugin"},"Build your own plugin"),(0,a.mdx)("p",null,"The Flipper desktop app and the mobile native SDK establish a connection that is used to send data to and from the device. Flipper does not make any restrictions on what kind of data is being sent. This enables a lot of different use-cases where you want to better understand what is going inside your app. For example, you can visualize the state of local caches, events happening or trigger actions on your app from the desktop."),(0,a.mdx)("p",null,"If there is no plugin that does exactly what you want, you can build your own plugin tailored to your needs. A plugin always consists of the native implementation sending and receiving data and the desktop plugin visualizing data: the native implementations are written in Java, Objective-C, or C++, the desktop UI is written in React."),(0,a.mdx)("p",null,"To learn more and build your own plugin, see the ",(0,a.mdx)("a",{parentName:"p",href:"/docs/tutorial/intro"},"Creating Plugins")," section of the Flipper Docs."))}m.isMDXComponent=!0}}]);
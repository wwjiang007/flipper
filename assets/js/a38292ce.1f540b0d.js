"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2600],{3905:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>d,MDXProvider:()=>u,mdx:()=>v,useMDXComponents:()=>s,withMDXComponents:()=>c});var i=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(){return a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},a.apply(this,arguments)}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=i.createContext({}),c=function(e){return function(n){var t=s(n.components);return i.createElement(e,a({},n,{components:t}))}},s=function(e){var n=i.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},u=function(e){var n=s(e.components);return i.createElement(d.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},g=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=s(t),u=r,g=c["".concat(o,".").concat(u)]||c[u]||m[u]||a;return t?i.createElement(g,p(p({ref:n},d),{},{components:t})):i.createElement(g,p({ref:n},d))}));function v(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=g;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var d=2;d<a;d++)o[d]=t[d];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}g.displayName="MDXCreateElement"},85956:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>c,default:()=>g,frontMatter:()=>d,metadata:()=>s,toc:()=>u});var i=t(83117),r=t(80102),a=(t(67294),t(3905)),o=t(44996),p=t(39960),l=["components"],d={},c=void 0,s={type:"mdx",permalink:"/docs/plugins/navigation/setup",source:"@site/src/embedded-pages/docs/plugins/navigation/setup.mdx",description:"Android",frontMatter:{}},u=[{value:"Android",id:"android",level:2},{value:"Using Android deep links",id:"using-android-deep-links",level:3},{value:"Third party solutions",id:"third-party-solutions",level:3},{value:"AirBnB deep link dispatch",id:"airbnb-deep-link-dispatch",level:4}],m={toc:u};function g(e){var n=e.components,t=(0,r.Z)(e,l);return(0,a.mdx)("wrapper",(0,i.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.mdx)("h2",{id:"android"},"Android"),(0,a.mdx)("p",null,"First, add the ",(0,a.mdx)(p.default,{to:(0,o.default)("/docs/features/plugins/navigation"),mdxType:"Link"},"Navigation plugin")," to your Flipper client instance:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-java"},"import com.facebook.flipper.android.AndroidFlipperClient;\nimport com.facebook.flipper.plugins.navigation.NavigationFlipperPlugin;\n\nfinal FlipperClient client = AndroidFlipperClient.getInstance(this);\nclient.addPlugin(NavigationFlipperPlugin.getInstance());\n")),(0,a.mdx)("p",null,"Navigation events in the app can then be recorded by calling ",(0,a.mdx)("inlineCode",{parentName:"p"},"sendNavigationEvent")," method of the ",(0,a.mdx)("inlineCode",{parentName:"p"},"NavigationFlipperPlugin")," instance from anywhere in the app.\nThis enables the Navigation Plugin to be integrated into existing navigation frameworks."),(0,a.mdx)("h3",{id:"using-android-deep-links"},"Using Android deep links"),(0,a.mdx)("p",null,"The Navigation Plugin can be used with built-in ",(0,a.mdx)("a",{parentName:"p",href:"https://developer.android.com/training/app-links/deep-linking"},"Deep Links for Android"),"."),(0,a.mdx)("p",null,"To deep link to an activity, edit the AndroidManifest.xml and add the intent filter for the given activity, as follows:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-xml"},'<intent-filter>\n  <action android:name="android.intent.action.VIEW" />\n  <category android:name="android.intent.category.DEFAULT" />\n  <category android:name="android.intent.category.BROWSABLE" />\n  <data android:scheme="flipper" android:host="deep_link_activity" />\n</intent-filter>\n')),(0,a.mdx)("p",null,"This enables the user to jump to ",(0,a.mdx)("inlineCode",{parentName:"p"},"flipper://deep_link_activity")," within Flipper."),(0,a.mdx)("p",null,"To log that navigation event in flipper, you can send the navigation event in the Activity's ",(0,a.mdx)("inlineCode",{parentName:"p"},"onCreate")," method, as follows:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-java"},'public class DeepLinkActivity extends AppCompatActivity {\n  @Override\n  protected void onCreate(final Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    NavigationFlipperPlugin.getInstance().sendNavigationEvent("flipper://deep_link_activity/");\n    ...\n')),(0,a.mdx)("h3",{id:"third-party-solutions"},"Third party solutions"),(0,a.mdx)("p",null,"The Navigation Plugin can easily be integrated into a third-party navigation framework."),(0,a.mdx)("h4",{id:"airbnb-deep-link-dispatch"},"AirBnB deep link dispatch"),(0,a.mdx)("p",null,(0,a.mdx)("a",{parentName:"p",href:"https://github.com/airbnb/DeepLinkDispatch"},"DeepLinkDispatch")," will work out of the box with Flipper for navigating to links, including support for url parameters."),(0,a.mdx)("p",null,"To add logging, simply add a BroadcastReceiver to your app that is called on any incoming deep links:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-java"},'public class DeepLinkReceiver extends BroadcastReceiver {\n  private static final String TAG = "DeepLinkReceiver";\n\n  @Override public void onReceive(Context context, Intent intent) {\n    String deepLinkUri = intent.getStringExtra(DeepLinkHandler.EXTRA_URI);\n    if (intent.getBooleanExtra(DeepLinkHandler.EXTRA_SUCCESSFUL, false)) {\n      NavigationFlipperPlugin.getInstance().sendNavigationEvent(deepLinkUri);\n    }\n  }\n}\n\npublic class DeepLinkApplication extends Application {\n  @Override public void onCreate() {\n    super.onCreate();\n    IntentFilter intentFilter = new IntentFilter(DeepLinkHandler.ACTION);\n    LocalBroadcastManager.getInstance(this).registerReceiver(new DeepLinkReceiver(), intentFilter);\n  }\n}\n')))}g.isMDXComponent=!0}}]);
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6805],{3905:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>c,MDXProvider:()=>m,mdx:()=>f,useMDXComponents:()=>u,withMDXComponents:()=>d});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(){return r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},r.apply(this,arguments)}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=i.createContext({}),d=function(e){return function(t){var n=u(t.components);return i.createElement(e,r({},t,{components:n}))}},u=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=u(e.components);return i.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},g=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,g=d["".concat(o,".").concat(m)]||d[m]||s[m]||r;return n?i.createElement(g,l(l({ref:t},c),{},{components:n})):i.createElement(g,l({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=g;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<r;c++)o[c]=n[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}g.displayName="MDXCreateElement"},44277:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>d,default:()=>f,frontMatter:()=>c,metadata:()=>u,toc:()=>s});var i=n(83117),a=n(80102),r=(n(67294),n(3905)),o=n(44996),l=n(39960),p=["components"],c={id:"react-native",title:"Building a React Native Plugin"},d=void 0,u={unversionedId:"tutorial/react-native",id:"tutorial/react-native",title:"Building a React Native Plugin",description:"This section of the tutorial requires React Native 0.62 or higher.",source:"@site/../docs/tutorial/react-native.mdx",sourceDirName:"tutorial",slug:"/tutorial/react-native",permalink:"/docs/tutorial/react-native",draft:!1,editUrl:"https://github.com/facebook/flipper/blob/main/website/../docs/tutorial/react-native.mdx",tags:[],version:"current",frontMatter:{id:"react-native",title:"Building a React Native Plugin"},sidebar:"main",previous:{title:"Building an Android Plugin",permalink:"/docs/tutorial/android"},next:{title:"Building a JavaScript (Browser) Plugin",permalink:"/docs/tutorial/javascript"}},m={},s=[],g={toc:s};function f(e){var t=e.components,n=(0,a.Z)(e,p);return(0,r.mdx)("wrapper",(0,i.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("admonition",{type:"caution"},(0,r.mdx)("p",{parentName:"admonition"},"This section of the tutorial requires React Native 0.62 or higher.")),(0,r.mdx)("p",null,"Once you've connected Flipper to a React Native application, writing your own Flipper plugin can be done without reaching into the native world."),(0,r.mdx)("p",null,"To expose Flipper to the JavaScript world, the React Native module ",(0,r.mdx)("inlineCode",{parentName:"p"},"react-native-flipper")," needs to be installed in the hosting application by running ",(0,r.mdx)("inlineCode",{parentName:"p"},"yarn add react-native-flipper")," and ",(0,r.mdx)("inlineCode",{parentName:"p"},"cd ios && pod install"),". If you are developing a plugin that is distributed as NPM package, make sure to add this to the installation instruction of your package as well!"),(0,r.mdx)("p",null,"Registering a new plugin is done by importing ",(0,r.mdx)("inlineCode",{parentName:"p"},"addPlugin")," from ",(0,r.mdx)("inlineCode",{parentName:"p"},"react-native-flipper")," and providing it an object that at least implements the method ",(0,r.mdx)("inlineCode",{parentName:"p"},"getId")," (the plugin id that should be used in the desktop plugin as well to make the connection) and two event handlers for the ",(0,r.mdx)("inlineCode",{parentName:"p"},"onConnect")," and ",(0,r.mdx)("inlineCode",{parentName:"p"},"onDisconnect")," events. The ",(0,r.mdx)("inlineCode",{parentName:"p"},"onConnect")," and ",(0,r.mdx)("inlineCode",{parentName:"p"},"onDisconnect")," events are triggered every time the plugin becomes (in)active in the Flipper desktop application. If the plugin is a ",(0,r.mdx)(l.default,{to:(0,o.default)("/docs/extending/create-plugin#background-plugins"),mdxType:"Link"},"background plugin"),", the events are triggered typically only once (they might be triggered never, if the Desktop user didn't enable the plugin, or multiple times if they enabled or disabled the plugin a few times)."),(0,r.mdx)("p",null,"The ",(0,r.mdx)("inlineCode",{parentName:"p"},"onConnect")," callback receive a ",(0,r.mdx)("inlineCode",{parentName:"p"},"connection")," which can be used to communicate with the backend:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"import {addPlugin} from \"react-native-flipper\"\n\naddPlugin({\n  getId() {\n    return 'ReactNativeExamplePlugin';\n  },\n  onConnect(connection) {\n    mammmals.forEach(({ title, pictureUrl }, index) => {\n      connection.send('newRow', {\n          id: index,\n          title,\n          url: pictureUrl\n      })\n    })\n  },\n  onDisconnect() {\n  }\n})\n")),(0,r.mdx)("p",null,"You may want to store the connection somewhere to be able to send more events as long as ",(0,r.mdx)("inlineCode",{parentName:"p"},"onDisconnect")," event hasn't been fired."),(0,r.mdx)("p",null,"The ",(0,r.mdx)("inlineCode",{parentName:"p"},"connection")," object can also be used to listen to messages coming from the Desktop plugin. See ",(0,r.mdx)(l.default,{to:(0,o.default)("/docs/extending/create-plugin"),mdxType:"Link"},"Client Plugin API")," for details."),(0,r.mdx)("p",null,"An example plugin to play a little Tic-Tac-Toe between the Flipper Desktop and a React Native app can be found inside this repository as well (run ",(0,r.mdx)("inlineCode",{parentName:"p"},"yarn && yarn android")," in ",(0,r.mdx)("inlineCode",{parentName:"p"},"react-native/ReactNativeFlipperExample")," to start the test project):"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"The React Native JavaScript based plugin implementation - ",(0,r.mdx)("a",{parentName:"li",href:"https://github.com/facebook/flipper/tree/main/react-native/ReactNativeFlipperExample/FlipperTicTacToe.js"},"FlipperTicTacToe.js")),(0,r.mdx)("li",{parentName:"ul"},"The Flipper Desktop plugin implementation - ",(0,r.mdx)("a",{parentName:"li",href:"https://github.com/facebook/flipper/blob/main/desktop/plugins/public/rn-tic-tac-toe/index.tsx"},"rn-tic-tac-toe/index.tsx"))))}f.isMDXComponent=!0}}]);